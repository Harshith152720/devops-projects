name: Gaming Cafe CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  ACR_NAME: aks-gamingcafe           # your Azure Container Registry name
  IMAGE_NAME: gaming-cafe-app
  AKS_CLUSTER: aks-gamingcafe       # your AKS cluster name
  AKS_RESOURCE_GROUP: rg-gamingcafe # your AKS resource group
  NAMESPACE: default

jobs:
  # üß© 1Ô∏è‚É£ SOURCE STAGE
  source:
    name: Source Checkout
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload source code as artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .

  # üèóÔ∏è 2Ô∏è‚É£ BUILD STAGE
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: source

    steps:
      - name: Download source artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.run_number }}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker image to ACR
        run: |
          az acr login --name $ACR_NAME
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.run_number }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-metadata
          path: |
            Dockerfile
            k8s/
            server.js
            package.json
            package-lock.json

  # üß™ 3Ô∏è‚É£ TEST STAGE
  test:
    name: Run Automated Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-metadata

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        run: |
          npm test || echo "No tests found - continuing"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/

  # üöÄ 4Ô∏è‚É£ DEPLOY STAGE
  deploy:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    needs: test
    environment: production

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-metadata

      - name: Deploy updated image to AKS
        run: |
          IMAGE_TAG=${{ github.run_number }}
          kubectl set image deployment/gaming-cafe-deployment \
            gaming-cafe=$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG \
            -n $NAMESPACE
          kubectl rollout status deployment/gaming-cafe-deployment -n $NAMESPACE
          kubectl get pods -n $NAMESPACE
          
