name: CI/CD - Gaming Cafe App

on:
  push:
    branches:
      - main

env:
  ACR_NAME: gcrgamingcafe9218        # your ACR name
  RESOURCE_GROUP: gaming-cafe-rg      # your Azure Resource Group
  CLUSTER_NAME: gaming-cafe-aks       # your AKS cluster name
  NAMESPACE: gaming-cafe              # better to use custom namespace
  IMAGE_NAME: gaming-cafe-app

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Login to Azure using service principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 2: Login to ACR
      - name: Azure Container Registry Login
        run: |
          az acr login --name $ACR_NAME

      # Step 3: Set up Docker Build
      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}  # Using commit SHA for better traceability
          echo "Building Docker image $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG"
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Step 4: Connect to AKS
      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --overwrite-existing

      # Step 5: Deploy or Update Application
      - name: Deploy to AKS
        run: |
          IMAGE_TAG=${{ env.IMAGE_TAG }}
          echo "Deploying image $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG"

          # Create namespace if it doesn't exist
          kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

          # Apply or update deployment using kubectl set
          if kubectl -n $NAMESPACE get deployment gaming-cafe-deployment >/dev/null 2>&1; then
            echo "Updating existing deployment..."
            kubectl -n $NAMESPACE set image deployment/gaming-cafe-deployment \
              gaming-cafe=$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
          else
            echo "Deployment not found, please create Kubernetes manifests first"
            exit 1
          fi

          # Wait for rollout to complete
          kubectl -n $NAMESPACE rollout status deployment/gaming-cafe-deployment --timeout=300s
          
          # Display deployment status
          echo "Deployment completed successfully!"
          kubectl -n $NAMESPACE get deployments,services,pods
